# ----- PIP -----
pip install --update pip
pipdeptree

# ----- BASICS -----
print("Hello, World!") 
x = 5  # variable assignment

# ----- DATA TYPES -----
int, float, str, bool, list, tuple, dict, set

# ----- NUMERIC OPERATIONS -----
x + y, x - y, x * y, x / y, x % y, x ** y, x // y

# ----- STRING -----
"hello".capitalize(), "HELLO".lower(), "hello".upper()
"hello world".split(), " ".join(["hello", "world"])
"hello".replace("h", "H"), "hello".startswith("he"), "hello".endswith("lo")
"    whitespace   ".strip()

# ----- LIST -----
[1, 2, 3], list.append(x), list.remove(x), list.insert(i, x)
list.index(x), list.pop(i), list.sort(), list.reverse()

# ----- TUPLE -----
(1, 2, 3)

# ----- DICTIONARY -----
{'a': 1, 'b': 2}, dict.keys(), dict.values(), dict.items()
dict.get('a'), dict['a'], dict.setdefault('c', 3)

# ----- SET -----
{1, 2, 3}, set.add(x), set.remove(x), set1.union(set2), set1.intersection(set2)

# ----- CONTROL FLOW -----
# if-elif-else
if x < y:
    pass
elif x > y:
    pass
else:
    pass

# for loop
for i in range(5):
    pass

for k, v in dictionary.items():
    pass

# while loop
while x > 0:
    pass

# ----- FUNCTIONS -----
def function_name(parameter1, parameter2=default_value):
    return

# lambda function
lambda x: x + 1

# ----- LIST COMPREHENSION -----
[x**2 for x in range(10) if x % 2 == 0]

# ----- EXCEPTIONS -----
try:
    pass
except ExceptionType as e:
    pass
finally:
    pass

# ----- FILE HANDLING -----
with open("filename.txt", "r") as file:
    content = file.read()

# ----- MODULES -----
import math
from os import path

# ----- OBJECT-ORIENTED PROGRAMMING -----
class ClassName:
    def __init__(self, attribute):
        self.attribute = attribute

    def method(self):
        pass

# ----- COMMON METHODS AND FUNCTIONS -----
len(list), type(var), isinstance(var, Type)

# ----- MISC -----
input("Enter value:"), range(start, stop, step)

# ----- NUMPY (if needed) -----
import numpy as np
np.array([1,2,3]), np.zeros((2,2)), np.ones((3,3)), np.eye(3)
array.shape, array.dtype, array.reshape(2,3)
np.dot(a,b), np.cross(a,b), np.linalg.inv(matrix)

# ----- PANDAS (if needed) -----
import pandas as pd
pd.DataFrame(data, columns=[])
df.head(), df.describe(), df.info(), df['column'], df.iloc[0]


# ----- To expand this:

You are a python expert.  I want you to write me a python cheatsheet.  It
should include code statements only, be in plaintext format.  It will be
searchable, so it can be in maximum detail.

Perfect!  Now print me a plaintext list, list only, of the above sections.  We will use these for iterating...
>
Perfect!  Now a more advanced one for strings

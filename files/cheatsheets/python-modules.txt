# ----- NUMPY -----
import numpy as np

# Array Creation
a = np.array([1,2,3])
b = np.zeros((2,2))
c = np.ones((3,3))
d = np.eye(3)
e = np.linspace(0, 1, 10)  # Linearly spaced values between 0 and 1
f = np.arange(0, 10, 2)    # Array from 0 to 10 with step size 2

# Array Manipulation
a.reshape(3,1), a.flatten()
a+b, a-b, a*b, a/b
np.dot(a,b)

# Mathematical Functions
np.sin(a), np.cos(a), np.log(a), np.exp(a)
np.mean(a), np.median(a), np.std(a)

# Linear Algebra
np.linalg.det(d), np.linalg.inv(d), np.linalg.eig(d)


# ----- PANDAS -----
import pandas as pd

# DataFrame
df = pd.DataFrame({
    'A': [1,2,3],
    'B': [4,5,6],
    'C': ['p', 'q', 'r']
})

# Basic Operations
df.head(), df.tail(), df.info(), df.describe()
df['A'], df.iloc[0], df.loc[0]
df[df['A'] > 2], df.groupby('A').mean()

# File Operations
df.to_csv('filename.csv')
new_df = pd.read_csv('filename.csv')


# ----- MATPLOTLIB -----
import matplotlib.pyplot as plt

# Basic Plotting
plt.plot([1,2,3], [4,5,6])
plt.xlabel('X-axis'), plt.ylabel('Y-axis')
plt.title('Title')
plt.show()

# Scatter, Histogram
plt.scatter([1,2,3], [4,5,6])
plt.hist([1,2,3,4,4,5], bins=3)


# ----- SCIKIT-LEARN -----
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Sample Dataset Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

# Linear Regression
model = LinearRegression()
model.fit(X_train, y_train)
predictions = model.predict(X_test)
mse = mean_squared_error(y_test, predictions)


# ----- REQUESTS -----
import requests

response = requests.get('https://www.example.com')
content = response.text
json_data = response.json()


# ----- DATETIME -----
from datetime import datetime

now = datetime.now()
formatted_date = now.strftime('%Y-%m-%d %H:%M:%S')


# ----- OS -----
import os

os.listdir(), os.mkdir('foldername')
os.getcwd(), os.chdir('path')


# ----- SYS -----
import sys

sys.argv, sys.exit()


# ----- RE (Regular Expressions) -----
import re

pattern = re.compile(r'\d{3}-\d{2}-\d{4}')
match = pattern.match("123-45-6789")


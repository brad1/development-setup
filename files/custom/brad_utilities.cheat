% brad_utilities

; Next: extract to collections_navigations, make run in zsh for function access

# s to connect to server
    s

# h to edit hostfile
    h

# d to open bookmarked dir
    d

# j to open next bookmarked dir
    j

# f to open function menu
    f

# e to edit pinned file
    e

# c to open legacy cheatsheets
    c

# cw to open work cheatsheets
    cw

# Connect to local Ubuntu box
    ssh ubuntu.local

# Start Cisco VPN UI
    nohup /opt/cisco/secureclient/bin/vpnui &

# Search tmux man page for rename key bindings
    man tmux | grep -iE '(key bindings are|rename)'

# Edit /etc/hosts
    sudo vim /etc/hosts

# List custom control key bindings
    bindkey | grep -E '"\^[^[]{1"'

# Launch Open Interpreter in new terminal
    gnome-terminal --tab -- bash -c "cd '/home/brad/Projects/_projects-research/open_interpreter' && . ./init.sh; exec bash"

# Display Git cheat commands via navi
    navi --print --query git

# Display Vim cheat commands via navi
    navi --print --query vim

# Reload shell aliases
    source "$DEVSETUP/files/zsh/aliases.zsh"

# Reload shell functions
# keep: user prefers sourcing the aggregate functions.zsh file
    source "$DEVSETUP/files/zsh/functions.zsh"

# Search files excluding .git and release directories
    find . -iname "*$FP*" -not -path "./.git/*" -not -path "./release/*"

# Show stored branch names
    cat /var/brad/lists/branches.list

# Edit stored branch names
    vim /var/brad/lists/branches.list

# Checkout a branch from recent reflog entries
    git checkout $(git reflog | grep -o 'moving from.*' | head -n25 | sed 's/moving //; s/from //; s/to //' | xargs -n1 | sort | uniq | fzf)

# Checkout branch from stored list
    git checkout $(cat /var/brad/lists/branches.list | fzf)

# Check if the current shell was launched from ranger
    ps aux | grep "$PPID" | grep -qa ranger && echo "You are in ranger" || echo "not in ranger"

# Archive a file with a timestamped name then recreate an empty file
    mv $FP "${FP}-archived-$(date +%Y%m%d%H%M).txt" && touch $FP

# whereami - show the parent process chain for the current shell
    pstree -s $$

# date-today - print today's date in compact YYYYMMDD format
    date +%Y%m%d




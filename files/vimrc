" :nmap <C-S-F2> ggdG  example of control sequence from vim wiki
":map <C-W> :bd<CR>
" :map <C-q> :w<CR>


" Paste mode automatically 
let &t_SI .= "\<Esc>[?2004h"
let &t_EI .= "\<Esc>[?2004l"

inoremap <special> <expr> <Esc>[200~ XTermPasteBegin()

function! XTermPasteBegin()
   set pastetoggle=<Esc>[201~
   set paste
return ""
endfunction

" Pathogen
execute pathogen#infect()

" disable ex mode unless using
nnoremap Q <nop>

" relative line numbers
set rnu

" colon commands no shift, rarely use f repeater
" cool idea, broken nerdtree
"nnoremap ; :
"nnoremap : ;

" try with word-wrap
":map <Up> gk
":imap <Up> <C-o>gk
":map <Down> gj
":imap <Down> <C-o>gj
":noremap j gj
":noremap k gk

"fix ctrlp being stupid
let g:ctrlp_working_path_mode = ''

nmap <Leader>a :source ~/.vimrc<CR>
nmap <Leader>f :%s///g<Left><Left><Left>
nmap <Leader>r :reg<CR>
nmap <Leader>o :set paste!<CR>
nmap <Leader>p :set mouse=a<CR>
nmap <Leader>i :set mouse=i<CR>
nmap <leader>s :w!<CR>
nmap <leader><F4> :qa!<CR>

nmap <F2> :bprev<CR>
nmap <F3> :bnext<CR>
nmap <F4> :tabp<CR>
nmap <F5> :tabn<CR>
nmap <F6> :!open -a TextEdit %:p<CR>  
nmap <F7> :buffers<CR>
nmap <F8> :jumps<CR>
nmap <F9> :browse old<CR>
"nmap <F9> :oldfiles<CR>
"nmap <F9> :browse oldfiles<CR>
nmap <F10> /TODO<CR>

inoremap <Leader>a {"":"","":[]} 
inoremap <Leader>s TODO: 
inoremap <Leader>d [<C-R>=strftime("%c")<CR>] 
inoremap <Leader>f ------------------------------------------------------------------------------ 


" Format visually selected JSON
":vnoremap <F8> :!python -m json.tool<CR>
:vnoremap <F2> :!format<CR>
" extra
" remove white spaces at end of line
" :nnoremap <silent> <F4> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>


"line numbering
:set nonumber
:nmap <Leader>l :setlocal number!<CR>

:set mouse=
" to undo:

syntax on

"indentation
set smartindent
set tabstop=2
set shiftwidth=2
set expandtab

" word wrap
set nowrap
:nmap <Leader>w :set wrap!<CR>


"File ops
" hack, alt f4 would work here but so would f4
"map <F4>  :bd<CR>
"map <Leader><F4>  :bd<CR>
" open file in another editor




:set incsearch
:set ignorecase
:set smartcase
:set hlsearch
:nmap <Leader>q :nohlsearch<CR>



:map <Leader>g :echo expand('%:p')<CR>



" Press Space to turn off highlighting and clear any message already displayed.
"   From vim.wikia.com, doesn't work
" :nnoremap <silent> <Space> :nohlsearch<Bar>:echo<CR>
" :nnoremap <CR> :nohlsearch<CR><CR>


" NERDtree
" autocmd vimenter * NERDTree
:nmap <Leader>e :NERDTreeToggle<CR>


" If you don't have this set already, then do so. It makes vim work like every other multiple-file editor on the planet. You can have edited buffers that aren't visible in a window somewhere.
:set hidden

" show newlines
" :set list


" Keypad
" 0 . Enter
":inoremap Op 0
":inoremap ^[Ol .
":inoremap ^[OM ^M

" 1 2 3
":inoremap ^[Oq 1
":inoremap ^[Or 2
":inoremap ^[Os 3
" 4 5 6
":inoremap ^[Ot 4
":inoremap ^[Ou 5
":inoremap ^[Ov 6
" 7 8 9
":inoremap ^[Ow 7
":inoremap ^[Ox 8
":inoremap ^[Oy 9
" + -  * /
":inoremap ^[Ok +
":inoremap ^[Om -
":inoremap ^[Oj *
":inoremap ^[Oo /

"new stuff, maybe template/snippet
"db.chef_runs.find({"node_name":"zzz"}).sort({"start_time":1}).pretty()
"db.environments.find({"current_step":/tested_patches/,"state":{$in:["running","error"]}}).sort({"created":1}).pretty()
